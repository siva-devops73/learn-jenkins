properties([
    parameters([
        [$class: 'ChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            name: 'COMPONENT',
            script: [
                $class: 'GroovyScript',
                    classpath: [],
                    sandbox: false,
                    script:
                        def x = "/opt/aws-ecr-for-jenkins-param".execute()
                        return x.in.text.tokenize()
                ]
        ],
        [$class: 'CascadeChoiceParameter',
            choiceType: 'PT_SINGLE_SELECT',
            name: 'APP_VERSION',
            script: [
                $class: 'GroovyScript',
                fallbackScript: [
                    classpath: [],
                    sandbox: false,
                    script:
                         def command = "/opt/aws-ecr-for-jenkins-param"+COMPONENT
                         def out = command.execute().in.text.tokenize()

               ]

            ]
        ]
    ])
])

pipeline {
  environment {
         vari = ""
  }
  agent any
  stages {
      stage ("Example") {
        steps {
         script{
          echo 'Hello'
          echo "${params.Env}"
          echo "${params.Server}"
          if (params.Server.equals("Could not get Environment from Env Param")) {
              echo "Must be the first build after Pipeline deployment.  Aborting the build"
              currentBuild.result = 'ABORTED'
              return
          }
          echo "Crossed param validation"
        } }
      }
  }
}